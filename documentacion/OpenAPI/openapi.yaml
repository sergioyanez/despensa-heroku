---
openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:9000/
  description: Generated server url
paths:
  "/venta/{id}":
    get:
      tags:
      - Venta-controller
      summary: Devuelve una venta
      description: Servicio encargado de retornar una venta con id ingresado por parámetro
        {id}.
      operationId: getOne
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Venta"
        '404':
          description: Not found
        '500':
          description: Internal error
    put:
      tags:
      - Venta-controller
      summary: Actualiza una Venta
      description: Servicio encargado de actualizar la venta con el ID ingresado por
        parámetro, retornando la venta actualizada.
      operationId: update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Venta"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Venta"
        '400':
          description: Bad request
        '500':
          description: Internal error
    delete:
      tags:
      - Venta-controller
      summary: Elimina una Venta
      description: Servicio encargado de eliminar la venta con el ID ingresada por
        parámetro.
      operationId: delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Venta"
        '400':
          description: Bad request
        '500':
          description: Internal error
  "/producto/{id}":
    get:
      tags:
      - Producto-controller
      summary: Devuelve un producto
      description: Servicio encargado de retornar un producto con id ingresado por
        parámetro {id}.
      operationId: getOne_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Producto"
        '404':
          description: Not found
        '500':
          description: Internal error
    put:
      tags:
      - Producto-controller
      summary: Actualiza un producto
      description: Servicio encargado de actualizar un producto con el ID especificado,
        devolviendo el producto actualizado.
      operationId: update_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Producto"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Producto"
        '400':
          description: Bad request
        '500':
          description: Internal error
    delete:
      tags:
      - Producto-controller
      summary: Elimina un producto
      description: Servicio encargado de eliminar un producto con el ID especificado.
      operationId: delete_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Producto"
        '400':
          description: Bad request
        '500':
          description: Internal error
  "/itemVenta/{id}":
    get:
      tags:
      - ItemVenta-controller
      summary: Devuelve un ItemVenta
      description: Servicio encargado de retornar un ítem de venta con id ingresado
        por parámetro {id}.
      operationId: getOne_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ItemVenta"
        '404':
          description: Not found
        '500':
          description: Internal error
    put:
      tags:
      - ItemVenta-controller
      summary: Actualiza un ItemVenta
      description: Servicio encargado de actualizar el ítem de venta con el ID ingresado
        por parámetro, retornando el ítem actualizado.
      operationId: update_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ItemVenta"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ItemVenta"
        '400':
          description: Bad request
        '500':
          description: Internal error
    delete:
      tags:
      - ItemVenta-controller
      summary: Elimina un ItemVenta
      description: Servicio encargado de eliminar el ítem de venta con el ID ingresado
        por parámetro.
      operationId: delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ItemVenta"
        '400':
          description: Bad request
        '500':
          description: Internal error
  "/cliente/{id}":
    get:
      tags:
      - Cliente-controller
      summary: Devuelve un cliente
      description: Servicio encargado de retornar un cliente con id ingresado por
        parámetro {id}.
      operationId: getOne_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Cliente"
        '404':
          description: Not found
        '500':
          description: Internal error
    put:
      tags:
      - Cliente-controller
      summary: Actualiza un Cliente
      description: Servicio encargado de actualizar el cliente con el ID ingresado
        por parámetro, retornando el cliente actualizado.
      operationId: update_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Cliente"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Cliente"
        '400':
          description: Bad request
        '500':
          description: Internal error
    delete:
      tags:
      - Cliente-controller
      summary: Elimina una Cliente
      description: Servicio encargado de eliminar el cliente con el ID ingresado por
        parámetro.
      operationId: delete_3
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Cliente"
        '400':
          description: Bad request
        '500':
          description: Internal error
  "/venta":
    get:
      tags:
      - Venta-controller
      summary: 'Devuelve el listado: Ventas'
      description: Servicio encargado de devolver el listado de ventas y sus clientes
        asociados.
      operationId: getAll
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Venta"
        '404':
          description: Not found
        '500':
          description: Internal error
    post:
      tags:
      - Venta-controller
      summary: Persiste una Venta
      description: Servicio encargado de persistir una venta, retornando la venta
        con el id asignado.
      operationId: save
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Venta"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Venta"
        '400':
          description: Bad request
        '500':
          description: Internal error
  "/producto":
    get:
      tags:
      - Producto-controller
      summary: 'Devuelve el listado: Productos'
      description: Servicio encargado de devolver el listado de productos.
      operationId: getAll_1
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Producto"
        '404':
          description: Not found
        '500':
          description: Internal error
    post:
      tags:
      - Producto-controller
      summary: Persiste un producto
      description: Servicio encargado de persistir un producto, retorna el producto
        con el id asignado.
      operationId: save_1
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Producto"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Producto"
        '400':
          description: Bad request
        '500':
          description: Internal error
  "/itemVenta":
    get:
      tags:
      - ItemVenta-controller
      summary: 'Devuelve el listado: ItemVenta'
      description: Servicio encargado de devolver el listado de ítems de ventas.
      operationId: getAll_2
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ItemVenta"
        '404':
          description: Not found
        '500':
          description: Internal error
    post:
      tags:
      - ItemVenta-controller
      summary: Persiste un ItemVenta
      description: Servicio encargado de persistir un ítem de venta, retornando el
        ítem con el id asignado.
      operationId: save_2
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ItemVenta"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ItemVenta"
        '400':
          description: Bad request
        '500':
          description: Internal error
  "/cliente":
    get:
      tags:
      - Cliente-controller
      summary: 'Devuelve el listado: Cliente'
      description: Servicio encargado de devolver el listado de clientes.
      operationId: getAll_3
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Cliente"
        '404':
          description: Not found
        '500':
          description: Internal error
    post:
      tags:
      - Cliente-controller
      summary: Persiste un Cliente
      description: Servicio encargado de persistir un cliente, retornando el cliente
        con el id asignado.
      operationId: save_3
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Cliente"
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Cliente"
        '400':
          description: Bad request
        '500':
          description: Internal error
  "/venta/ventasPorDia":
    get:
      tags:
      - Venta-controller
      summary: Devuelve el reporte de ventas por día.
      description: Servicio encargado de devolver el reporte de ventas por día.
      operationId: generarReporteDeVentasPorDia
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ReporteVentasPorDia"
        '404':
          description: Not found
        '500':
          description: Internal error
  "/itemVenta/reporteMontoClientes":
    get:
      tags:
      - ItemVenta-controller
      summary: Devuelve un reporte con los clientes y sus respectivos montos tottales.
      description: Servicio encargado de devolver un reporte con el producto más vendido.
      operationId: generarReporteMontoClientes
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ReporteClientesMonto"
        '404':
          description: Not found
        '500':
          description: Internal error
  "/itemVenta/productoMasVendido":
    get:
      tags:
      - ItemVenta-controller
      summary: Devuelve el producto más vendido.
      description: Servicio encargado de devolver un reporte con el producto más vendido.
      operationId: getProductoMasvendido
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProductoMasVendido"
        '404':
          description: Not found
        '500':
          description: Internal error
components:
  schemas:
    Cliente:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nombre:
          type: string
        apellido:
          type: string
    ItemVenta:
      type: object
      properties:
        id:
          type: integer
          format: int64
        cantidad:
          type: integer
          format: int32
        venta:
          "$ref": "#/components/schemas/Venta"
        producto:
          "$ref": "#/components/schemas/Producto"
    Producto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nombre:
          type: string
        precio:
          type: number
          format: float
        stock:
          type: integer
          format: int32
    Venta:
      type: object
      properties:
        id:
          type: integer
          format: int64
        fecha:
          type: string
          format: date
        cliente:
          "$ref": "#/components/schemas/Cliente"
        items:
          type: array
          items:
            "$ref": "#/components/schemas/ItemVenta"
    ReporteVentasPorDia:
      type: object
      properties:
        fecha:
          type: string
          format: date
        nombreProducto:
          type: string
        cantidadVentas:
          type: integer
          format: int64
    ReporteClientesMonto:
      type: object
      properties:
        nombre:
          type: string
        monto:
          type: number
          format: double
    ProductoMasVendido:
      type: object
      properties:
        nombre:
          type: string
        cantidad:
          type: integer
          format: int64
